Search.setIndex({"docnames": ["index", "modules", "sinr", "sinr.tests", "sinr.text"], "filenames": ["index.rst", "modules.rst", "sinr.rst", "sinr.tests.rst", "sinr.text.rst"], "titles": ["Welcome to SINr\u2019s documentation!", "sinr", "SINr", "Test SINr", "SINr Text"], "terms": {"graph": [0, 1, 4], "embed": [0, 1], "nfm": [0, 1], "loader": [0, 1], "visual": [0, 1], "normal": [0, 1], "logger": [0, 1], "modul": [0, 1], "text": [0, 2], "co": [0, 2], "occurr": [0, 2], "cython": 0, "pmi": [0, 2], "filter": 0, "preprocess": 0, "test": 0, "workflow": 0, "index": [0, 2], "search": 0, "page": 0, "interpretabledimens": [1, 2], "add_interpret": [1, 2], "get_dict": [1, 2], "get_idx": [1, 2], "get_interpret": [1, 2], "get_valu": [1, 2], "sort": [1, 2], "topk": [1, 2], "with_valu": [1, 2], "interpretablewordsmodelbuild": [1, 2], "build": [1, 2, 4], "modelbuild": [1, 2], "with_al": [1, 2], "with_commun": [1, 2], "with_embeddings_nfm": [1, 2], "with_embeddings_nr": [1, 2], "with_graph": [1, 2], "with_np": [1, 2], "with_vocabulari": [1, 2], "nocommunitydetectedexcept": [1, 2], "noembeddingextractedexcept": [1, 2], "nointerpretabilityexcept": [1, 2], "novocabularyexcept": [1, 2], "onlygraphmodelbuild": [1, 2], "detect_commun": [1, 2], "extract_embed": [1, 2], "get_commun": [1, 2], "get_cooc_graph": [1, 2], "get_nfm": [1, 2], "get_np": [1, 2], "get_nr": [1, 2], "get_out_of_lgcc_com": [1, 2], "get_vocabulari": [1, 2], "get_wrd_to_id": [1, 2], "load_from_adjacency_matrix": [1, 2], "load_from_cooc_pkl": [1, 2], "load_from_graph": [1, 2], "run": [1, 2, 4], "size_of_voc": [1, 2], "transfert_communities_label": [1, 2], "sinrvector": [1, 2], "cosine_sim": [1, 2], "get_communities_as_labels_set": [1, 2], "get_community_membership": [1, 2], "get_community_set": [1, 2], "get_dimension_descriptor": [1, 2], "get_dimension_descriptors_idx": [1, 2], "get_dimension_stereotyp": [1, 2], "get_dimension_stereotypes_idx": [1, 2], "get_my_vector": [1, 2], "get_nnv": [1, 2], "get_nnz": [1, 2], "get_number_of_dimens": [1, 2], "get_nz_dim": [1, 2], "get_obj_descriptor": [1, 2], "get_obj_stereotyp": [1, 2], "get_obj_stereotypes_and_descriptor": [1, 2], "get_topk_dim": [1, 2], "get_value_dim_per_word": [1, 2], "get_value_obj_dim": [1, 2], "label": [1, 2], "light_model_sav": [1, 2], "load": [1, 2, 4], "most_similar": [1, 2], "pct_nnz": [1, 2], "save": [1, 2, 4], "set_commun": [1, 2], "set_graph": [1, 2], "set_n_job": [1, 2], "set_np": [1, 2], "set_vector": [1, 2], "set_vocabulari": [1, 2], "thresholdedmodelbuild": [1, 2], "get_graph_from_matrix": [1, 2], "get_lgcc": [1, 2], "compute_np": [1, 2], "compute_nr": [1, 2], "distributed_degre": [1, 2], "get_community_weight": [1, 2], "get_membership": [1, 2], "get_nfm_embed": [1, 2], "load_adj_mat": [1, 2], "load_pkl_text": [1, 2], "sinrviz": [1, 2], "compare_stereotyp": [1, 2], "apply_norm": [1, 2], "iterative_pmi": [1, 2], "content": 1, "class": [2, 3, 4], "graph_embed": [2, 3], "idx": 2, "type": [2, 4], "base": [2, 3, 4], "object": [2, 4], "encapsul": 2, "interpret": 2, "model": 2, "obj": 2, "valu": [2, 4], "paramet": [2, 4], "id": [2, 4], "on_valu": 2, "true": [2, 4], "default": [2, 4], "name": 2, "n_job": [2, 4], "1": [2, 4], "n_neighbor": 2, "31": 2, "should": 2, "us": [2, 4], "after": 2, "train": 2, "word": [2, 4], "get": 2, "vector": 2, "The": [2, 4], "make": 2, "allow": 2, "result": 2, "effici": 2, "No": 2, "need": 2, "parent": 2, "method": 2, "start": 2, "those": 2, "ar": [2, 4], "includ": 2, "function": 2, "just": 2, "provid": 2, "which": [2, 4], "contain": [2, 4], "vocabulari": [2, 4], "commun": 2, "read": 2, "To": 2, "keep": 2, "ad": 2, "node": 2, "recal": 2, "predomin": 2, "threshold": 2, "0": [2, 4], "float": [2, 4], "underli": 2, "occ": 2, "statist": 2, "degre": 2, "central": 2, "store": 2, "order": [2, 4], "dimens": 2, "instanc": [2, 4], "deal": 2, "when": 2, "have": 2, "except": 2, "rais": [2, 4], "detect": 2, "ha": 2, "been": 2, "perform": [2, 4], "thu": 2, "leav": 2, "self": 2, "its": 2, "none": [2, 4], "extract": [2, 4], "nr": 2, "np": 2, "were": 2, "wa": 2, "built": [2, 4], "It": 2, "i": [2, 4], "anymor": 2, "One": 2, "cannot": 2, "plai": 2, "sole": 2, "lgcc": 2, "wrd_to_idx": 2, "can": 2, "approach": 2, "thi": 2, "inspect": 2, "instead": 2, "creat": 2, "gamma": 2, "100": 2, "algo": 2, "int": [2, 4], "option": 2, "For": 2, "louvain": 2, "algorithm": 2, "ignor": 2, "param": 2, "control": 2, "size": [2, 4], "greater": 2, "smaller": [2, 4], "networkit": 2, "allorw": 2, "boolean": 2, "whether": 2, "one": 2, "want": 2, "insight": 2, "about": 2, "partit": 2, "previous": 2, "structur": 2, "return": [2, 4], "patrtion": 2, "matrix": [2, 4], "largest": 2, "connect": 2, "compon": 2, "obtain": 2, "call": 2, "indic": 2, "comunn": 2, "outsid": 2, "list": [2, 4], "map": [2, 4], "classmethod": [2, 4], "matrix_object": 2, "norm": 2, "from": [2, 4], "an": [2, 4], "adjac": 2, "spars": [2, 4], "csr": 2, "csr_matrix": [2, 4], "describ": 2, "strategy_norm": 2, "If": 2, "weight": 2, "exampl": 2, "number": [2, 4], "job": 2, "cooc_matrix_path": 2, "pickl": [2, 4], "textual": 2, "data": 2, "matric": 2, "gener": 2, "cooccurr": [2, 4], "string": [2, 4], "path": [2, 4], "file": [2, 4], "e": 2, "community_label": 2, "refin": 2, "fals": [2, 4], "transfer": 2, "comput": [2, 4], "anoth": 2, "mainli": 2, "occur": 2, "set": [2, 3], "bool": [2, 4], "typev": 2, "str": [2, 4], "initi": 2, "where": 2, "all": [2, 4], "singleton": 2, "Then": 2, "hand": 2, "20": 2, "manipul": 2, "explor": 2, "space": 2, "obj1": 2, "obj2": 2, "cosin": 2, "similar": 2, "between": 2, "specifi": 2, "item": 2, "first": 2, "second": 2, "each": 2, "associ": 2, "repres": 2, "subset": 2, "export": 2, "integ": 2, "specif": 2, "belong": 2, "constitut": 2, "member": 2, "descriptor": 2, "top": 2, "retriev": 2, "posit": 2, "highest": 2, "5": 2, "turn": 2, "consid": 2, "fetch": 2, "row": 2, "column": 2, "els": 2, "A": [2, 4], "ndarrai": [2, 4], "null": 2, "vetor": 2, "count": 2, "non": 2, "zero": [2, 4], "topk_dim": 2, "topk_val": 2, "matter": [2, 4], "3": [2, 4], "most": 2, "stereotyp": 2, "per": 2, "both": 2, "dim_index": 2, "given": [2, 4], "dim": 2, "minim": 2, "version": 2, "readabl": 2, "dict": [2, 4], "evalu": 2, "benchmark": 2, "http": 2, "github": 2, "com": 2, "kudkudak": 2, "pass": [2, 4], "nearest": 2, "neighbor": 2, "percentag": 2, "g": 2, "properti": 2, "scipi": [2, 4], "sklearn": 2, "voc": 2, "By": 2, "vocab": 2, "lower": [2, 4], "than": [2, 4], "discard": 2, "sparser": 2, "more": 2, "01": 2, "abov": 2, "minimum": [2, 4], "coo_matrix": [2, 4], "out": 2, "membership_matrix": 2, "membership": 2, "measur": 2, "depend": 2, "how": 2, "distribut": 2, "over": 2, "l1": 2, "total": 2, "term": 2, "shape": [2, 4], "x": [2, 4], "merg": 2, "f": 2, "metric": 2, "common": 2, "applic": 2, "tupl": 2, "strategy_load": 2, "match": 2, "mat_path": 2, "cooc_mat_path": 2, "coocurr": 2, "viz": 2, "sinr_vector": 2, "packag": [2, 3, 4], "embded": 2, "goal": 2, "diemnes": 2, "produc": 2, "arg": 2, "heatmap": 2, "compar": 2, "element": 2, "appli": 2, "normalis": 2, "ipmi": 2, "befor": 2, "norm_arg": 2, "argument": 2, "alfgorithm": 2, "iter": 2, "level": 2, "sinr_embed": 3, "python": 3, "m": 3, "test_sinr_nfm": 3, "testsinr_embed": 3, "methodnam": 3, "runtest": 3, "testcas": 3, "setup": 3, "up": 3, "fixtur": 3, "ani": 3, "teardown": 3, "tear": 3, "down": 3, "test_adjac": 3, "test_community_weight": 3, "test_membership": 3, "test_nnz": 3, "test_np": 3, "test_nr": 3, "graph_emn": 3, "test_sinr_workflow": 3, "test_community_except": 3, "test_detect_commun": 3, "test_extract_embed": 3, "test_load_voc": 3, "test_nfm_except": 3, "unit": 3, "construct": 4, "corpu": 4, "dictionnari": 4, "lexicograph": 4, "well": 4, "fit": 4, "window": 4, "2": 4, "through": 4, "length": 4, "symmetr": 4, "context": 4, "filenam": 4, "output": 4, "cooccurrence_cython": 4, "construct_cooccurrence_matrix": 4, "dictionari": 4, "lexicographix": 4, "account": 4, "thei": 4, "appear": 4, "consequ": 4, "upper": 4, "triangular": 4, "undirect": 4, "sentenc": 4, "window_s": 4, "move": 4, "coo": 4, "py": 4, "min_pmi": 4, "alpha": 4, "beta": 4, "numpi": 4, "probabl": 4, "reset": 4, "smooth": 4, "factor": 4, "y": 4, "p_xy": 4, "p_x": 4, "p_y": 4, "log": 4, "pxy": 4, "px": 4, "ppmi": 4, "exponenti": 4, "exp_pmi": 4, "valueerror": 4, "rang": 4, "format": 4, "pmi_filt": 4, "exclud": 4, "record": 4, "thershold": 4, "regist": 4, "languag": 4, "input_path": 4, "language_en": 4, "en": 4, "language_fr": 4, "fr": 4, "register_new": 4, "new": 4, "register_web": 4, "web": 4, "vrtmaker": 4, "output_path": 4, "do_txt_to_vrt": 4, "vrt": 4, "write": 4, "filepath": 4, "extract_text": 4, "corpus_path": 4, "lemmat": 4, "stop_word": 4, "lower_word": 4, "punct": 4, "exclude_po": 4, "min_freq": 4, "50": 4, "exclude_en": 4, "min_length_word": 4, "open_corpu": 4, "prior": 4}, "objects": {"": [[2, 0, 0, "-", "sinr"]], "sinr": [[2, 0, 0, "-", "graph_embeddings"], [2, 0, 0, "-", "logger"], [2, 0, 0, "-", "nfm"], [2, 0, 0, "-", "strategy_loader"], [2, 0, 0, "-", "strategy_norm"], [3, 0, 0, "-", "tests"], [4, 0, 0, "-", "text"], [2, 0, 0, "-", "viz"]], "sinr.graph_embeddings": [[2, 1, 1, "", "InterpretableDimension"], [2, 1, 1, "", "InterpretableWordsModelBuilder"], [2, 1, 1, "", "ModelBuilder"], [2, 3, 1, "", "NoCommunityDetectedException"], [2, 3, 1, "", "NoEmbeddingExtractedException"], [2, 3, 1, "", "NoInterpretabilityException"], [2, 3, 1, "", "NoVocabularyException"], [2, 1, 1, "", "OnlyGraphModelBuilder"], [2, 1, 1, "", "SINr"], [2, 1, 1, "", "SINrVectors"], [2, 1, 1, "", "ThresholdedModelBuilder"], [2, 5, 1, "", "get_graph_from_matrix"], [2, 5, 1, "", "get_lgcc"]], "sinr.graph_embeddings.InterpretableDimension": [[2, 2, 1, "", "add_interpreter"], [2, 2, 1, "", "get_dict"], [2, 2, 1, "", "get_idx"], [2, 2, 1, "", "get_interpreter"], [2, 2, 1, "", "get_interpreters"], [2, 2, 1, "", "get_value"], [2, 2, 1, "", "sort"], [2, 2, 1, "", "topk"], [2, 2, 1, "", "with_value"]], "sinr.graph_embeddings.InterpretableWordsModelBuilder": [[2, 2, 1, "", "build"]], "sinr.graph_embeddings.ModelBuilder": [[2, 2, 1, "", "build"], [2, 2, 1, "", "with_all"], [2, 2, 1, "", "with_communities"], [2, 2, 1, "", "with_embeddings_nfm"], [2, 2, 1, "", "with_embeddings_nr"], [2, 2, 1, "", "with_graph"], [2, 2, 1, "", "with_np"], [2, 2, 1, "", "with_vocabulary"]], "sinr.graph_embeddings.OnlyGraphModelBuilder": [[2, 2, 1, "", "build"]], "sinr.graph_embeddings.SINr": [[2, 2, 1, "", "detect_communities"], [2, 2, 1, "", "extract_embeddings"], [2, 2, 1, "", "get_communities"], [2, 2, 1, "", "get_cooc_graph"], [2, 2, 1, "", "get_nfm"], [2, 2, 1, "", "get_np"], [2, 2, 1, "", "get_nr"], [2, 2, 1, "", "get_out_of_LgCC_coms"], [2, 2, 1, "", "get_vocabulary"], [2, 2, 1, "", "get_wrd_to_id"], [2, 2, 1, "", "load_from_adjacency_matrix"], [2, 2, 1, "", "load_from_cooc_pkl"], [2, 2, 1, "", "load_from_graph"], [2, 2, 1, "", "run"], [2, 2, 1, "", "size_of_voc"], [2, 2, 1, "", "transfert_communities_labels"]], "sinr.graph_embeddings.SINrVectors": [[2, 2, 1, "", "cosine_sim"], [2, 2, 1, "", "get_communities_as_labels_sets"], [2, 2, 1, "", "get_community_membership"], [2, 2, 1, "", "get_community_sets"], [2, 2, 1, "", "get_dimension_descriptors"], [2, 2, 1, "", "get_dimension_descriptors_idx"], [2, 2, 1, "", "get_dimension_stereotypes"], [2, 2, 1, "", "get_dimension_stereotypes_idx"], [2, 2, 1, "", "get_my_vector"], [2, 2, 1, "", "get_nnv"], [2, 2, 1, "", "get_nnz"], [2, 2, 1, "", "get_number_of_dimensions"], [2, 2, 1, "", "get_nz_dims"], [2, 2, 1, "", "get_obj_descriptors"], [2, 2, 1, "", "get_obj_stereotypes"], [2, 2, 1, "", "get_obj_stereotypes_and_descriptors"], [2, 2, 1, "", "get_topk_dims"], [2, 2, 1, "", "get_value_dim_per_word"], [2, 2, 1, "", "get_value_obj_dim"], [2, 4, 1, "", "labels"], [2, 2, 1, "", "light_model_save"], [2, 2, 1, "", "load"], [2, 2, 1, "", "most_similar"], [2, 2, 1, "", "pct_nnz"], [2, 2, 1, "", "save"], [2, 2, 1, "", "set_communities"], [2, 2, 1, "", "set_graph"], [2, 2, 1, "", "set_n_jobs"], [2, 2, 1, "", "set_np"], [2, 2, 1, "", "set_vectors"], [2, 2, 1, "", "set_vocabulary"]], "sinr.graph_embeddings.ThresholdedModelBuilder": [[2, 2, 1, "", "build"]], "sinr.nfm": [[2, 5, 1, "", "compute_NP"], [2, 5, 1, "", "compute_NR"], [2, 5, 1, "", "distributed_degree"], [2, 5, 1, "", "get_community_weights"], [2, 5, 1, "", "get_membership"], [2, 5, 1, "", "get_nfm_embeddings"]], "sinr.strategy_loader": [[2, 5, 1, "", "load_adj_mat"], [2, 5, 1, "", "load_pkl_text"]], "sinr.strategy_norm": [[2, 5, 1, "", "apply_norm"], [2, 5, 1, "", "iterative_pmi"]], "sinr.tests": [[3, 0, 0, "-", "test_sinr_nfm"], [3, 0, 0, "-", "test_sinr_workflow"]], "sinr.tests.test_sinr_nfm": [[3, 1, 1, "", "TestSinr_embeddings"]], "sinr.tests.test_sinr_nfm.TestSinr_embeddings": [[3, 2, 1, "", "setUp"], [3, 2, 1, "", "tearDown"], [3, 2, 1, "", "test_adjacency"], [3, 2, 1, "", "test_community_weights"], [3, 2, 1, "", "test_membership"], [3, 2, 1, "", "test_nnz"], [3, 2, 1, "", "test_np"], [3, 2, 1, "", "test_nr"]], "sinr.tests.test_sinr_workflow": [[3, 1, 1, "", "TestSinr_embeddings"]], "sinr.tests.test_sinr_workflow.TestSinr_embeddings": [[3, 2, 1, "", "setUp"], [3, 2, 1, "", "tearDown"], [3, 2, 1, "", "test_community_exception"], [3, 2, 1, "", "test_detect_communities"], [3, 2, 1, "", "test_extract_embeddings"], [3, 2, 1, "", "test_load_voc"], [3, 2, 1, "", "test_nfm_exception"]], "sinr.text": [[4, 0, 0, "-", "cooccurrence"], [4, 0, 0, "-", "cooccurrence_cython"], [4, 0, 0, "-", "pmi"], [4, 0, 0, "-", "preprocess"]], "sinr.text.cooccurrence": [[4, 1, 1, "", "Cooccurrence"]], "sinr.text.cooccurrence.Cooccurrence": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "load"], [4, 2, 1, "", "save"]], "sinr.text.cooccurrence_cython": [[4, 5, 1, "", "construct_cooccurrence_matrix"]], "sinr.text.pmi": [[4, 5, 1, "", "pmi"], [4, 5, 1, "", "pmi_filter"]], "sinr.text.preprocess": [[4, 1, 1, "", "Corpus"], [4, 1, 1, "", "VRTMaker"], [4, 5, 1, "", "extract_text"], [4, 5, 1, "", "open_corpus"]], "sinr.text.preprocess.Corpus": [[4, 4, 1, "", "LANGUAGE_EN"], [4, 4, 1, "", "LANGUAGE_FR"], [4, 4, 1, "", "REGISTER_NEWS"], [4, 4, 1, "", "REGISTER_WEB"]], "sinr.text.preprocess.VRTMaker": [[4, 2, 1, "", "do_txt_to_vrt"]], "sinr.viz": [[2, 1, 1, "", "SINrViz"]], "sinr.viz.SINrViz": [[2, 2, 1, "", "compare_stereotypes"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "sinr": [0, 1, 2, 3, 4], "": 0, "document": 0, "content": [0, 2, 3, 4], "introduct": 0, "get": 0, "start": 0, "indic": 0, "tabl": 0, "graph": 2, "embed": 2, "attribut": 2, "nfm": [2, 3], "loader": 2, "visual": 2, "normal": 2, "logger": 2, "modul": [2, 3, 4], "test": 3, "workflow": 3, "text": 4, "co": 4, "occurr": 4, "cython": 4, "pmi": 4, "filter": 4, "preprocess": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to SINr\u2019s documentation!": [[0, "welcome-to-sinr-s-documentation"]], "Contents:": [[0, null]], "Introduction": [[0, "introduction"]], "Get Started": [[0, "get-started"]], "Indices and tables": [[0, "indices-and-tables"]], "sinr": [[1, "sinr"]], "SINr": [[2, "sinr"]], "Graph Embeddings": [[2, "module-sinr.graph_embeddings"]], "Attributes": [[2, "attributes"], [2, "id1"]], "SINr NFM": [[2, "module-sinr.nfm"]], "Loader": [[2, "module-sinr.strategy_loader"]], "Visualization": [[2, "module-sinr.viz"]], "SINr Normalization": [[2, "module-sinr.strategy_norm"]], "Logger": [[2, "module-sinr.logger"]], "Module contents": [[2, "module-sinr"], [3, "module-sinr.tests"], [4, "module-sinr.text"]], "Test SINr": [[3, "test-sinr"]], "Test SINr NFM": [[3, "module-sinr.tests.test_sinr_nfm"]], "Test SINr workflow": [[3, "module-sinr.tests.test_sinr_workflow"]], "SINr Text": [[4, "sinr-text"]], "Co-occurrence": [[4, "module-sinr.text.cooccurrence"]], "Co-occurrence Cython": [[4, "module-sinr.text.cooccurrence_cython"]], "PMI Filtering": [[4, "module-sinr.text.pmi"]], "Preprocess Text": [[4, "module-sinr.text.preprocess"]]}, "indexentries": {"interpretabledimension (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.InterpretableDimension"]], "interpretablewordsmodelbuilder (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.InterpretableWordsModelBuilder"]], "modelbuilder (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.ModelBuilder"]], "nocommunitydetectedexception": [[2, "sinr.graph_embeddings.NoCommunityDetectedException"]], "noembeddingextractedexception": [[2, "sinr.graph_embeddings.NoEmbeddingExtractedException"]], "nointerpretabilityexception": [[2, "sinr.graph_embeddings.NoInterpretabilityException"]], "novocabularyexception": [[2, "sinr.graph_embeddings.NoVocabularyException"]], "onlygraphmodelbuilder (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.OnlyGraphModelBuilder"]], "sinr (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.SINr"]], "sinrvectors (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.SINrVectors"]], "sinrviz (class in sinr.viz)": [[2, "sinr.viz.SINrViz"]], "thresholdedmodelbuilder (class in sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.ThresholdedModelBuilder"]], "add_interpreter() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.add_interpreter"]], "apply_norm() (in module sinr.strategy_norm)": [[2, "sinr.strategy_norm.apply_norm"]], "build() (sinr.graph_embeddings.interpretablewordsmodelbuilder method)": [[2, "sinr.graph_embeddings.InterpretableWordsModelBuilder.build"]], "build() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.build"]], "build() (sinr.graph_embeddings.onlygraphmodelbuilder method)": [[2, "sinr.graph_embeddings.OnlyGraphModelBuilder.build"]], "build() (sinr.graph_embeddings.thresholdedmodelbuilder method)": [[2, "sinr.graph_embeddings.ThresholdedModelBuilder.build"]], "compare_stereotypes() (sinr.viz.sinrviz method)": [[2, "sinr.viz.SINrViz.compare_stereotypes"]], "compute_np() (in module sinr.nfm)": [[2, "sinr.nfm.compute_NP"]], "compute_nr() (in module sinr.nfm)": [[2, "sinr.nfm.compute_NR"]], "cosine_sim() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.cosine_sim"]], "detect_communities() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.detect_communities"]], "distributed_degree() (in module sinr.nfm)": [[2, "sinr.nfm.distributed_degree"]], "extract_embeddings() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.extract_embeddings"]], "get_communities() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_communities"]], "get_communities_as_labels_sets() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_communities_as_labels_sets"]], "get_community_membership() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_community_membership"]], "get_community_sets() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_community_sets"]], "get_community_weights() (in module sinr.nfm)": [[2, "sinr.nfm.get_community_weights"]], "get_cooc_graph() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_cooc_graph"]], "get_dict() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.get_dict"]], "get_dimension_descriptors() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_dimension_descriptors"]], "get_dimension_descriptors_idx() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_dimension_descriptors_idx"]], "get_dimension_stereotypes() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_dimension_stereotypes"]], "get_dimension_stereotypes_idx() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_dimension_stereotypes_idx"]], "get_graph_from_matrix() (in module sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.get_graph_from_matrix"]], "get_idx() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.get_idx"]], "get_interpreter() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.get_interpreter"]], "get_interpreters() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.get_interpreters"]], "get_lgcc() (in module sinr.graph_embeddings)": [[2, "sinr.graph_embeddings.get_lgcc"]], "get_membership() (in module sinr.nfm)": [[2, "sinr.nfm.get_membership"]], "get_my_vector() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_my_vector"]], "get_nfm() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_nfm"]], "get_nfm_embeddings() (in module sinr.nfm)": [[2, "sinr.nfm.get_nfm_embeddings"]], "get_nnv() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_nnv"]], "get_nnz() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_nnz"]], "get_np() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_np"]], "get_nr() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_nr"]], "get_number_of_dimensions() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_number_of_dimensions"]], "get_nz_dims() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_nz_dims"]], "get_obj_descriptors() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_obj_descriptors"]], "get_obj_stereotypes() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_obj_stereotypes"]], "get_obj_stereotypes_and_descriptors() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_obj_stereotypes_and_descriptors"]], "get_out_of_lgcc_coms() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_out_of_LgCC_coms"]], "get_topk_dims() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_topk_dims"]], "get_value() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.get_value"]], "get_value_dim_per_word() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_value_dim_per_word"]], "get_value_obj_dim() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.get_value_obj_dim"]], "get_vocabulary() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_vocabulary"]], "get_wrd_to_id() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.get_wrd_to_id"]], "iterative_pmi() (in module sinr.strategy_norm)": [[2, "sinr.strategy_norm.iterative_pmi"]], "labels (sinr.graph_embeddings.sinrvectors attribute)": [[2, "sinr.graph_embeddings.SINrVectors.labels"]], "light_model_save() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.light_model_save"]], "load() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.load"]], "load_adj_mat() (in module sinr.strategy_loader)": [[2, "sinr.strategy_loader.load_adj_mat"]], "load_from_adjacency_matrix() (sinr.graph_embeddings.sinr class method)": [[2, "sinr.graph_embeddings.SINr.load_from_adjacency_matrix"]], "load_from_cooc_pkl() (sinr.graph_embeddings.sinr class method)": [[2, "sinr.graph_embeddings.SINr.load_from_cooc_pkl"]], "load_from_graph() (sinr.graph_embeddings.sinr class method)": [[2, "sinr.graph_embeddings.SINr.load_from_graph"]], "load_pkl_text() (in module sinr.strategy_loader)": [[2, "sinr.strategy_loader.load_pkl_text"]], "module": [[2, "module-sinr"], [2, "module-sinr.graph_embeddings"], [2, "module-sinr.logger"], [2, "module-sinr.nfm"], [2, "module-sinr.strategy_loader"], [2, "module-sinr.strategy_norm"], [2, "module-sinr.viz"], [3, "module-sinr.tests"], [3, "module-sinr.tests.test_sinr_nfm"], [3, "module-sinr.tests.test_sinr_workflow"], [4, "module-sinr.text"], [4, "module-sinr.text.cooccurrence"], [4, "module-sinr.text.cooccurrence_cython"], [4, "module-sinr.text.pmi"], [4, "module-sinr.text.preprocess"]], "most_similar() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.most_similar"]], "pct_nnz() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.pct_nnz"]], "run() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.run"]], "save() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.save"]], "set_communities() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.set_communities"]], "set_graph() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.set_graph"]], "set_n_jobs() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.set_n_jobs"]], "set_np() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.set_np"]], "set_vectors() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.set_vectors"]], "set_vocabulary() (sinr.graph_embeddings.sinrvectors method)": [[2, "sinr.graph_embeddings.SINrVectors.set_vocabulary"]], "sinr": [[2, "module-sinr"]], "sinr.graph_embeddings": [[2, "module-sinr.graph_embeddings"]], "sinr.logger": [[2, "module-sinr.logger"]], "sinr.nfm": [[2, "module-sinr.nfm"]], "sinr.strategy_loader": [[2, "module-sinr.strategy_loader"]], "sinr.strategy_norm": [[2, "module-sinr.strategy_norm"]], "sinr.viz": [[2, "module-sinr.viz"]], "size_of_voc() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.size_of_voc"]], "sort() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.sort"]], "topk() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.topk"]], "transfert_communities_labels() (sinr.graph_embeddings.sinr method)": [[2, "sinr.graph_embeddings.SINr.transfert_communities_labels"]], "with_all() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_all"]], "with_communities() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_communities"]], "with_embeddings_nfm() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_embeddings_nfm"]], "with_embeddings_nr() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_embeddings_nr"]], "with_graph() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_graph"]], "with_np() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_np"]], "with_value() (sinr.graph_embeddings.interpretabledimension method)": [[2, "sinr.graph_embeddings.InterpretableDimension.with_value"]], "with_vocabulary() (sinr.graph_embeddings.modelbuilder method)": [[2, "sinr.graph_embeddings.ModelBuilder.with_vocabulary"]], "testsinr_embeddings (class in sinr.tests.test_sinr_nfm)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings"]], "testsinr_embeddings (class in sinr.tests.test_sinr_workflow)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings"]], "setup() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.setUp"]], "setup() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.setUp"]], "sinr.tests": [[3, "module-sinr.tests"]], "sinr.tests.test_sinr_nfm": [[3, "module-sinr.tests.test_sinr_nfm"]], "sinr.tests.test_sinr_workflow": [[3, "module-sinr.tests.test_sinr_workflow"]], "teardown() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.tearDown"]], "teardown() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.tearDown"]], "test_adjacency() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.test_adjacency"]], "test_community_exception() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.test_community_exception"]], "test_community_weights() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.test_community_weights"]], "test_detect_communities() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.test_detect_communities"]], "test_extract_embeddings() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.test_extract_embeddings"]], "test_load_voc() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.test_load_voc"]], "test_membership() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.test_membership"]], "test_nfm_exception() (sinr.tests.test_sinr_workflow.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_workflow.TestSinr_embeddings.test_nfm_exception"]], "test_nnz() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.test_nnz"]], "test_np() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.test_np"]], "test_nr() (sinr.tests.test_sinr_nfm.testsinr_embeddings method)": [[3, "sinr.tests.test_sinr_nfm.TestSinr_embeddings.test_nr"]], "cooccurrence (class in sinr.text.cooccurrence)": [[4, "sinr.text.cooccurrence.Cooccurrence"]], "corpus (class in sinr.text.preprocess)": [[4, "sinr.text.preprocess.Corpus"]], "language_en (sinr.text.preprocess.corpus attribute)": [[4, "sinr.text.preprocess.Corpus.LANGUAGE_EN"]], "language_fr (sinr.text.preprocess.corpus attribute)": [[4, "sinr.text.preprocess.Corpus.LANGUAGE_FR"]], "register_news (sinr.text.preprocess.corpus attribute)": [[4, "sinr.text.preprocess.Corpus.REGISTER_NEWS"]], "register_web (sinr.text.preprocess.corpus attribute)": [[4, "sinr.text.preprocess.Corpus.REGISTER_WEB"]], "vrtmaker (class in sinr.text.preprocess)": [[4, "sinr.text.preprocess.VRTMaker"]], "construct_cooccurrence_matrix() (in module sinr.text.cooccurrence_cython)": [[4, "sinr.text.cooccurrence_cython.construct_cooccurrence_matrix"]], "do_txt_to_vrt() (sinr.text.preprocess.vrtmaker method)": [[4, "sinr.text.preprocess.VRTMaker.do_txt_to_vrt"]], "extract_text() (in module sinr.text.preprocess)": [[4, "sinr.text.preprocess.extract_text"]], "fit() (sinr.text.cooccurrence.cooccurrence method)": [[4, "sinr.text.cooccurrence.Cooccurrence.fit"]], "load() (sinr.text.cooccurrence.cooccurrence class method)": [[4, "sinr.text.cooccurrence.Cooccurrence.load"]], "open_corpus() (in module sinr.text.preprocess)": [[4, "sinr.text.preprocess.open_corpus"]], "pmi() (in module sinr.text.pmi)": [[4, "sinr.text.pmi.pmi"]], "pmi_filter() (in module sinr.text.pmi)": [[4, "sinr.text.pmi.pmi_filter"]], "save() (sinr.text.cooccurrence.cooccurrence method)": [[4, "sinr.text.cooccurrence.Cooccurrence.save"]], "sinr.text": [[4, "module-sinr.text"]], "sinr.text.cooccurrence": [[4, "module-sinr.text.cooccurrence"]], "sinr.text.cooccurrence_cython": [[4, "module-sinr.text.cooccurrence_cython"]], "sinr.text.pmi": [[4, "module-sinr.text.pmi"]], "sinr.text.preprocess": [[4, "module-sinr.text.preprocess"]]}})