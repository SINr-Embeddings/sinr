Search.setIndex({"docnames": ["index", "modules", "presentation", "publications", "sinr", "sinr.tests", "sinr.text"], "filenames": ["index.rst", "modules.rst", "presentation.rst", "publications.rst", "sinr.rst", "sinr.tests.rst", "sinr.text.rst"], "titles": ["Welcome to SINr\u2019s documentation!", "SINr Embeddings", "Overview", "Publications", "SINr Core", "Test SINr", "SINr Text"], "terms": {"overview": 0, "requir": 0, "instal": 0, "usag": 0, "exampl": 0, "contribut": 0, "licens": 0, "public": 0, "embed": [0, 2, 3, 6], "core": [0, 1], "graph": [0, 1, 2, 3, 6], "interpretabledimens": [0, 1, 4], "interpretablewordsmodelbuild": [0, 1, 2, 4], "modelbuild": [0, 1, 4], "nocommunitydetectedexcept": [0, 1, 4], "noembeddingextractedexcept": [0, 1, 4], "nointerpretabilityexcept": [0, 1, 4], "novocabularyexcept": [0, 1, 4], "onlygraphmodelbuild": [0, 1, 4], "sinrvector": [0, 1, 2, 4, 6], "thresholdedmodelbuild": [0, 1, 4], "get_graph_from_matrix": [0, 1, 4], "get_lgcc": [0, 1, 4], "nfm": [0, 1], "compute_np": [0, 1, 4], "compute_nr": [0, 1, 4], "distributed_degre": [0, 1, 4], "get_community_weight": [0, 1, 4], "get_membership": [0, 1, 4], "get_nfm_embed": [0, 1, 4], "loader": [0, 1], "load_adj_mat": [0, 1, 4], "load_pkl_text": [0, 1, 4], "visual": [0, 1], "sinrviz": [0, 1, 4], "logger": [0, 1], "modul": [0, 1, 2], "text": [0, 1, 2, 4], "co": [0, 1, 2, 3, 4], "occurr": [0, 1, 2, 3, 4], "cooccurr": [0, 1, 2, 4, 6], "cython": [0, 1, 2], "construct_cooccurrence_matrix": [0, 1, 6], "pmi": [0, 1, 2], "filter": [0, 1, 2, 3, 4], "pmi_filt": [0, 1, 2, 6], "preprocess": [0, 1, 2], "corpu": [0, 1, 2, 3, 6], "vrtmaker": [0, 1, 2, 6], "extract_text": [0, 1, 2, 6], "open_corpu": [0, 1, 6], "test": [0, 1, 6], "testsinr_embed": [], "workflow": [0, 1], "index": [0, 4, 6], "search": [0, 4], "page": 0, "add_interpret": [1, 4], "get_dict": [1, 4], "get_idx": [1, 4], "get_interpret": [1, 4], "get_valu": [1, 4], "sort": [1, 4], "topk": [1, 4, 6], "with_valu": [1, 4], "build": [1, 2, 4, 6], "with_al": [1, 4], "with_commun": [1, 4], "with_embeddings_nfm": [1, 4], "with_embeddings_nr": [1, 4], "with_graph": [1, 4], "with_np": [1, 4], "with_vocabulari": [1, 4], "detect_commun": [1, 2, 4], "extract_embed": [1, 2, 4], "get_commun": [1, 4], "get_cooc_graph": [1, 4], "get_nfm": [1, 4], "get_np": [1, 4], "get_nr": [1, 4], "get_out_of_lgcc_com": [1, 4], "get_vocabulari": [1, 4], "get_wrd_to_id": [1, 4], "load_from_adjacency_matrix": [1, 4], "load_from_cooc_pkl": [1, 2, 4], "load_from_graph": [1, 4], "run": [1, 4, 6], "size_of_voc": [1, 4], "transfert_communities_label": [1, 4], "cosine_sim": [1, 4], "get_communities_as_labels_set": [1, 4], "get_community_membership": [1, 4], "get_community_set": [1, 4], "get_dimension_descriptor": [1, 4], "get_dimension_descriptors_idx": [1, 4], "get_dimension_stereotyp": [1, 4], "get_dimension_stereotypes_idx": [1, 4], "get_my_vector": [1, 4], "get_nnv": [1, 4], "get_nnz": [1, 4], "get_number_of_dimens": [1, 4], "get_nz_dim": [1, 4], "get_obj_descriptor": [1, 4], "get_obj_stereotyp": [1, 2, 4], "get_obj_stereotypes_and_descriptor": [1, 4], "get_topk_dim": [1, 4], "get_value_dim_per_word": [1, 4], "get_value_obj_dim": [1, 4], "label": [1, 4, 6], "light_model_sav": [1, 4], "load": [1, 2, 4, 6], "most_similar": [1, 2, 4], "pct_nnz": [1, 4], "save": [1, 2, 4, 6], "set_commun": [1, 4], "set_graph": [1, 4], "set_n_job": [1, 4], "set_np": [1, 4], "set_vector": [1, 4], "set_vocabulari": [1, 4], "compare_stereotyp": [1, 4], "content": 1, "fit": [1, 2, 6], "language_en": [1, 2, 6], "language_fr": [1, 6], "register_new": [1, 6], "register_web": [1, 2, 6], "do_txt_to_vrt": [1, 2, 6], "setup": [], "teardown": [], "test_adjac": [], "test_community_weight": [], "test_membership": [], "test_nnz": [], "test_np": [], "test_nr": [], "test_community_except": [], "test_detect_commun": [], "test_extract_embed": [], "test_load_voc": [], "test_nfm_except": [], "sinr": [2, 3], "i": [2, 3, 4, 6], "an": [2, 3, 4, 6], "open": 2, "sourc": 2, "tool": 2, "effici": [2, 4], "comput": [2, 3, 4, 6], "word": [2, 3, 4, 6], "Its": 2, "aim": 2, "provid": [2, 4], "spars": [2, 3, 4, 6], "interpret": [2, 3, 4, 6], "vector": [0, 1, 2, 4, 6], "from": [2, 3, 4, 6], "structur": [2, 4], "The": [2, 4, 6], "dimens": [2, 3, 4, 6], "produc": [2, 4], "ar": [2, 3, 4, 6], "relat": 2, "commun": [2, 3, 4], "detect": [2, 3, 4], "By": [2, 4], "leverag": 2, "rel": 2, "connect": [2, 4], "vertic": 2, "space": [2, 3, 4], "focus": 2, "python": [2, 3], "reli": 2, "networkit": [2, 4], "also": 2, "implement": 2, "extract": [2, 4, 6], "larg": [2, 3], "corpora": 2, "One": [2, 4], "strength": 2, "its": [2, 4, 6], "abil": 2, "work": 2, "competit": 2, "similar": [2, 4, 6], "approach": [2, 3, 4], "For": [2, 4], "more": [2, 4], "detail": [2, 4], "perform": [2, 4, 6], "downstream": 2, "evalu": [0, 1, 2, 3, 4], "task": 2, "pleas": 2, "refer": 2, "section": 2, "As": 2, "librari": [2, 3], "us": [2, 4, 6], "c": [2, 6], "modern": 2, "compil": 2, "openmp": 2, "": [2, 4], "3": [2, 3, 4, 6], "9": 2, "pip": 2, "conda": 2, "recommend": 2, "can": [2, 4], "through": [2, 6], "poetri": [], "direct": 6, "activ": [2, 4], "environ": 2, "git": [], "clone": [], "github": 4, "com": 4, "cd": [], "solv": 6, "depend": 4, "base": [4, 6], "pyproject": [], "toml": [], "file": [2, 4, 6], "To": [2, 4], "get": [2, 4, 6], "start": [2, 4], "have": [2, 4], "look": 2, "notebook": 2, "directori": [2, 6], "here": 2, "minimum": [2, 4, 6], "import": [2, 6], "urllib": [], "io": 4, "gzip": [], "nk": [], "graph_embed": [2, 4], "ge": 2, "url": [], "http": [2, 3, 4], "snap": [], "stanford": [], "edu": [], "data": [2, 3, 4, 6], "wiki": [], "vote": [], "txt": 2, "gz": [], "graph_fil": [], "wikipedia": [], "read": 4, "sock": [], "request": [2, 6], "urlopen": [], "bytesio": [], "close": 2, "rt": [], "f_in": [], "wt": [], "f_out": [], "writelin": [], "readlin": [], "initi": [2, 3, 4], "object": [2, 4, 6], "g": 4, "readgraph": [], "format": [4, 6], "model": [2, 4, 6], "algo": 4, "plm": 4, "print": 2, "pull": 2, "welcom": 2, "major": 2, "chang": 2, "issu": 2, "first": [2, 4, 6], "disccu": 2, "made": 2, "releas": 2, "under": 2, "cecil": 2, "2": [2, 6], "1": [2, 4, 6], "see": [2, 4], "current": 2, "maintain": 2, "univers": 2, "le": [2, 3], "man": 2, "If": [2, 6], "you": 2, "find": [2, 6], "your": 2, "own": 2, "research": 2, "cite": 2, "appropri": 2, "paper": [2, 3], "list": [2, 4, 6], "below": 2, "found": [2, 4], "2021": [2, 3], "thibault": [2, 3], "prouteau": [2, 3], "victor": [2, 3], "conn": [2, 3], "nicola": [2, 3], "dugu\u00e9": [2, 3], "anthoni": [2, 3], "perez": [2, 3], "jean": [2, 3], "charl": [2, 3], "lamirel": [2, 3], "et": [2, 3], "al": [2, 3], "fast": [2, 3], "node": [2, 3, 4], "represent": [2, 3], "sin": [2, 3], "advanc": [2, 3], "intellig": [2, 3], "analysi": [2, 3], "xix": [2, 3], "19th": [2, 3], "intern": [2, 3, 4], "symposium": [2, 3], "ida": [2, 3], "apr": [2, 3], "porto": [2, 3], "portug": [2, 3], "pp": [2, 3], "325": [2, 3], "337": [2, 3], "10": [2, 3, 4, 6], "1007": [2, 3], "978": [2, 3], "030": [2, 3], "74251": [2, 3], "5_26": [2, 3], "hal": [2, 3], "03197434": [2, 3], "2022": [2, 3], "nathali": [2, 3], "camelin": [2, 3], "sylvain": [2, 3], "meignier": [2, 3], "result": [2, 3, 4, 6], "intrus": [2, 3], "french": [2, 3], "lrec": [2, 3], "jun": [2, 3], "marseil": [2, 3], "franc": [2, 3], "03770444": [2, 3], "class": [4, 6], "idx": 4, "type": [4, 6], "should": 4, "encapsul": 4, "about": 4, "instead": 4, "simpl": 4, "dict": [4, 6], "obj": 4, "valu": [4, 6], "ad": 4, "element": 4, "would": 4, "help": 4, "mean": [2, 3, 4], "paramet": [4, 6], "str": [4, 6], "descriptor": [4, 6], "stereotyp": [4, 6], "float": [4, 6], "describ": 4, "relev": 4, "thi": 4, "process": 4, "return": [4, 6], "getter": 4, "id": [4, 6], "int": [4, 6], "specif": [4, 6], "tupl": [4, 6], "allow": 4, "which": [4, 6], "boolean": [4, 6], "numer": 4, "bool": [4, 6], "on_valu": 4, "true": [4, 6], "accord": [4, 6], "fals": [4, 6], "option": 4, "default": [4, 6], "select": 4, "onli": [4, 6], "number": [4, 6], "keep": [4, 6], "seet": 4, "self": 4, "name": 4, "n_job": [2, 4, 6], "n_neighbor": [2, 4], "31": 4, "after": [4, 6], "train": [2, 3, 4, 6], "make": 4, "No": 4, "need": [4, 6], "parent": 4, "method": [2, 3, 4, 6], "those": 4, "includ": 4, "function": [4, 6], "just": 4, "contain": [2, 4, 6], "vocabulari": [4, 6], "recal": 4, "predomin": 4, "threshold": 4, "0": [4, 6], "underli": 4, "occ": 4, "statist": 4, "degre": 4, "central": 4, "store": 4, "order": [4, 6], "instanc": [4, 6], "deal": 4, "when": 4, "except": 4, "rais": [4, 6], "ha": 4, "been": 4, "thu": 4, "leav": 4, "none": [4, 6], "nr": 4, "np": 4, "were": [4, 6], "wa": 4, "built": [4, 6], "It": 4, "anymor": 4, "cannot": 4, "plai": 4, "sole": 4, "lgcc": 4, "wrd_to_idx": 4, "inspect": 4, "creat": 4, "gamma": [2, 4, 6], "par": 4, "balanc": 4, "louvain": 4, "algorithm": 4, "ignor": 4, "param": [4, 6], "control": 4, "size": [4, 6], "greater": 4, "smaller": [4, 6], "allorw": 4, "whether": [4, 6], "one": [2, 3, 4, 6], "want": 4, "insight": 4, "parallelis": 4, "strategi": 4, "dev": 4, "doc": 4, "python_api": 4, "html": 4, "random": 4, "singl": [4, 6], "thread": 4, "mode": 4, "forc": 4, "determin": 4, "pass": [4, 6], "partit": 4, "previous": 4, "patrtion": 4, "matrix": [2, 4, 6], "largest": 4, "compon": [4, 6], "obtain": 4, "call": 4, "indic": 4, "comunn": 4, "outsid": 4, "map": [4, 6], "classmethod": [4, 6], "matrix_object": 4, "adjac": 4, "csr": 4, "csr_matrix": [4, 6], "job": 4, "cooc_matrix_path": 4, "pickl": [4, 6], "textual": [2, 4], "matric": 4, "gener": 4, "string": [4, 6], "path": [4, 6], "e": 4, "community_label": 4, "refin": 4, "transfer": 4, "anoth": 4, "mainli": 4, "occur": 4, "set": [4, 6], "typev": 4, "where": 4, "all": [4, 6], "singleton": 4, "Then": 4, "hand": 4, "20": [2, 4], "manipul": [2, 4], "explor": [2, 4], "obj1": 4, "obj2": 4, "cosin": [4, 6], "between": [4, 6], "specifi": 4, "item": 4, "second": [4, 6], "each": [4, 6], "associ": 4, "repres": [4, 6], "subset": 4, "export": 4, "integ": 4, "belong": 4, "constitut": 4, "member": 4, "top": [4, 6], "retriev": 4, "posit": [4, 6], "highest": 4, "5": [2, 4, 6], "turn": 4, "consid": [4, 6], "fetch": [4, 6], "row": 4, "column": [4, 6], "els": 4, "A": [4, 6], "ndarrai": [4, 6], "null": 4, "vetor": 4, "count": 4, "non": 4, "zero": [4, 6], "topk_dim": [2, 4, 6], "topk_val": [2, 4], "matter": [4, 6], "most": 4, "per": [4, 6], "both": 4, "dim_index": 4, "given": [4, 6], "dim": [4, 6], "minim": [4, 6], "version": 4, "readabl": 4, "benchmark": 4, "kudkudak": 4, "nearest": 4, "neighbor": 4, "percentag": 4, "properti": 4, "scipi": [4, 6], "sklearn": [4, 6], "voc": 4, "vocab": [4, 6], "lower": [4, 6], "than": [4, 6], "discard": 4, "sparser": [2, 3, 4], "01": 4, "abov": 4, "coo_matrix": [4, 6], "out": 4, "membership_matrix": 4, "membership": 4, "measur": 4, "how": 4, "distribut": 4, "over": 4, "l1": 4, "normal": [4, 6], "total": [4, 6], "weight": [4, 6], "term": 4, "shape": [4, 6], "x": [4, 6], "merg": 4, "f": 4, "metric": 4, "common": 4, "applic": 4, "strategy_load": 4, "match": 4, "mat_path": 4, "cooc_mat_path": 4, "coocurr": 4, "viz": 4, "sinr_vector": 4, "packag": [2, 3, 4, 6], "embded": 4, "goal": 4, "diemnes": 4, "arg": [4, 6], "heatmap": 4, "compar": [4, 6], "level": 4, "sinr_embed": [], "m": [], "test_sinr_nfm": [], "methodnam": [], "runtest": [], "testcas": [], "up": [], "fixtur": [], "ani": [], "tear": [], "down": [], "graph_emn": [], "test_sinr_workflow": [], "unit": [], "construct": [2, 6], "dictionnari": [4, 6], "lexicograph": 6, "well": 6, "window": [2, 6], "length": 6, "symmetr": 6, "context": 6, "filenam": 6, "output": 6, "cooccurrence_cython": 6, "dictionari": 6, "lexicographix": 6, "account": [4, 6], "thei": 6, "appear": 6, "consequ": 6, "upper": 6, "triangular": 6, "undirect": 6, "sentenc": [2, 6], "window_s": 6, "move": 6, "coo": 6, "py": 6, "min_pmi": 6, "alpha": 6, "beta": 6, "numpi": 6, "probabl": 6, "reset": 6, "smooth": 6, "factor": 6, "y": 6, "p_xy": 6, "p_x": 6, "p_y": 6, "log": 6, "pxy": 6, "px": 6, "ppmi": 6, "exponenti": 6, "exp_pmi": 6, "valueerror": 6, "rang": 6, "exclud": 6, "record": 6, "thershold": 6, "regist": 6, "languag": 6, "input_path": 6, "en": 6, "fr": 6, "new": [4, 6], "web": 6, "output_path": 6, "vrt": [2, 6], "write": [2, 6], "filepath": 6, "corpus_path": 6, "lemmat": 6, "stop_word": 6, "lower_word": 6, "punct": 6, "exclude_po": 6, "min_freq": [2, 6], "50": [4, 6], "exclude_en": 6, "min_length_word": 6, "prior": 6, "dimensionfilteredexcept": [0, 1, 4], "nointruderpickableexcept": [0, 1, 4], "get_compact_lgcc": [0, 1, 4], "best_predicted_word": [0, 1, 6], "best_predicted_word_k": [0, 1, 6], "calc_direct_bias_sinr": [0, 1, 6], "calc_indirect_bias_sinr": [0, 1, 6], "calcul_analogy_norm": [0, 1, 6], "calcul_analogy_sparsified_norm": [0, 1, 6], "calcul_analogy_value_zero": [0, 1, 6], "clf_fit": [0, 1, 6], "clf_score": [0, 1, 6], "clf_xgb_interpret": [0, 1, 6], "dist_ratio": [0, 1, 6], "dist_ratio_dim": [0, 1, 6], "eval_analogi": [0, 1, 6], "eval_analogy_by_category_k": [0, 1, 6], "eval_analogy_k": [0, 1, 6], "eval_similar": [0, 1, 6], "fetch_simlex": [0, 1, 6], "fetch_analogi": [0, 1, 6], "fetch_data_men": [0, 1, 6], "fetch_data_scw": [0, 1, 6], "fetch_data_ws353": [0, 1, 6], "find_txt_fil": [0, 1, 6], "format_lin": [0, 1, 6], "identify_gender_direction_sinr": [0, 1, 6], "load_config": [0, 1, 6], "normalize_vector": [0, 1, 6], "plot_category_error_r": [0, 1, 6], "plot_global_error_r": [0, 1, 6], "project_vector": [0, 1, 6], "reject_vector": [0, 1, 6], "remove_invalid_lin": [0, 1, 6], "similarity_men_ws353_scw": [0, 1, 2, 6], "binar": [1, 4], "cosine_dist": [1, 4], "dim_nnz_count": [1, 4], "dim_nnz_threshold": [1, 4], "get_matching_commun": [1, 4], "get_union_topk": [1, 4], "get_vectors_using_self_spac": [1, 4], "get_vocabulary_s": [1, 4], "inter_sim": [1, 4], "intra_sim": [1, 4], "load_from_w2v": [1, 4], "obj_nnz_count": [1, 4], "pick_intrud": [1, 4], "remove_communities_dim_nnz": [1, 4], "sparsifi": [1, 2, 4], "nltk": 2, "resourc": 2, "ppc": 2, "ev": 2, "project": [2, 6], "gutenberg": 2, "electron": 2, "archiv": 2, "host": 2, "www": 2, "org": [2, 3], "download": 2, "25": 2, "000": 2, "free": 2, "book": 2, "my_corpu": 2, "w": 2, "raw": 2, "vrt_maker": 2, "8": 2, "my_cooc_matrix": 2, "pk": 2, "commu": 2, "sinr_vec": [2, 6], "my_sinr_vector": 2, "better": [2, 3], "100": [2, 4, 6], "nresult": 2, "ndimens": 2, "appl": 2, "nword": 2, "exist": [2, 4], "journal": [2, 3], "articl": [2, 3], "depth": [2, 3], "present": [2, 3], "prefer": [2, 3], "citat": [2, 3], "simon": [2, 3], "guillot": [2, 3], "network": [2, 3], "unifi": [2, 3], "complex": [2, 3], "2024": [2, 3], "12": [2, 3], "6": [2, 3], "1093": [2, 3], "comnet": [2, 3], "cnae034": [2, 3], "dx": [2, 3], "doi": [2, 3], "__": 2, "04829653": [2, 3], "sparsiti": [2, 3], "step": [2, 3, 4], "closer": [2, 3], "iwc": [2, 3], "2023": [2, 3], "nanci": [2, 3], "04321407": [2, 3], "anna": [2, 3], "b\u00e9ranger": [2, 3], "foster": [2, 3], "emerg": [2, 3], "menton": [2, 3], "04398742": 2, "region": [2, 3], "confer": [2, 3], "system": [2, 3], "mai": [2, 3], "havr": [2, 3], "215": [2, 3], "5281": [2, 3], "zenodo": [2, 3], "7957531": [2, 3], "04113024": [2, 3], "04398742v1": 3, "try": 4, "access": 4, "remov": [4, 6], "intrud": 4, "could": 4, "distanc": [4, 6], "diff_tol": 4, "005": 4, "give": 4, "maxim": 4, "kept": [4, 6], "take": 4, "dataset": [4, 6], "men": [4, 6], "ws353": [4, 6], "scw": [4, 6], "simlex": [4, 6], "999": 4, "differ": [4, 6], "toler": 4, "low": 4, "high": 4, "two": [4, 6], "small": 4, "target": 4, "correspond": 4, "src": 4, "tgt": 4, "prct": [4, 6], "among": [4, 6], "pick": [4, 6], "transpos": 4, "copi": 4, "big": 4, "referenti": 4, "dist": [4, 6], "averag": [4, 6], "w2v_path": 4, "word2vec": 4, "union": [4, 6], "prctbot": [4, 6], "prcttop": [4, 6], "least": [4, 6], "bottom": [4, 6], "threshold_min": 4, "threshold_max": 4, "less": 4, "k": [4, 6], "word_to_idx": 4, "compact": 4, "insid": 4, "input": 4, "spacy_s": 6, "lg": 6, "separ": 6, "personn": 6, "document": 6, "tag": 6, "exceptions_path": 6, "chunk": 6, "min_length_doc": 6, "dict_filt": 6, "delet": 6, "token": 6, "word_a": 6, "word_b": 6, "word_c": 6, "analogi": 6, "b": 6, "d": 6, "best": 6, "predict": 6, "word_list": 6, "gender_direct": 6, "bia": 6, "respect": 6, "gender": 6, "analyz": 6, "profess": 6, "config": 6, "json": 6, "expon": 6, "appli": 6, "word1": 6, "word2": 6, "calcul": 6, "indirect": 6, "n": 6, "sparsif": 6, "x_train": 6, "y_train": 6, "clf": 6, "xgbclassifi": 6, "base_scor": 6, "booster": 6, "callback": 6, "colsample_bylevel": 6, "colsample_bynod": 6, "colsample_bytre": 6, "devic": 6, "early_stopping_round": 6, "enable_categor": 6, "eval_metr": 6, "feature_typ": 6, "grow_polici": 6, "importance_typ": 6, "interaction_constraint": 6, "learning_r": 6, "max_bin": 6, "max_cat_threshold": 6, "max_cat_to_onehot": 6, "max_delta_step": 6, "max_depth": 6, "max_leav": 6, "min_child_weight": 6, "miss": 6, "nan": 6, "monotone_constraint": 6, "multi_strategi": 6, "n_estim": 6, "num_parallel_tre": 6, "random_st": 6, "classif": 6, "classifi": 6, "ex": 6, "xgboost": 6, "svm": 6, "svc": 6, "x_test": 6, "y_test": 6, "score": 6, "accuraci": 6, "scikit": 6, "learn": 6, "scorer": 6, "xgb": 6, "gain": 6, "main": 6, "featur": 6, "time": 6, "split": 6, "across": 6, "tree": 6, "cover": 6, "coverag": 6, "total_gain": 6, "total_cov": 6, "nbtopk": 6, "distratio": 6, "disratio": 6, "analogy_func": 6, "expect": 6, "bunch": 6, "like": 6, "kei": 6, "interest": 6, "error": 6, "rate": 6, "categori": 6, "print_miss": 6, "spearman": 6, "correl": 6, "human": 6, "665": 6, "related": 6, "langag": 6, "4": 6, "subdirectori": 6, "line": 6, "definitional_pair": 6, "pca": 6, "positive_end": 6, "brother": 6, "negative_end": 6, "sister": 6, "identifi": 6, "masculin": 6, "feminin": 6, "pair": 6, "defin": 6, "sum": 6, "file_path": 6, "plot": 6, "global": 6, "v": 6, "u": 6, "orthogon": 6, "onto": 6, "invalid": 6, "clean": 6}, "objects": {"": [[4, 0, 0, "-", "sinr"]], "sinr": [[4, 0, 0, "-", "graph_embeddings"], [4, 0, 0, "-", "logger"], [4, 0, 0, "-", "nfm"], [4, 0, 0, "-", "strategy_loader"], [6, 0, 0, "-", "text"], [4, 0, 0, "-", "viz"]], "sinr.graph_embeddings": [[4, 1, 1, "", "DimensionFilteredException"], [4, 2, 1, "", "InterpretableDimension"], [4, 2, 1, "", "InterpretableWordsModelBuilder"], [4, 2, 1, "", "ModelBuilder"], [4, 1, 1, "", "NoCommunityDetectedException"], [4, 1, 1, "", "NoEmbeddingExtractedException"], [4, 1, 1, "", "NoInterpretabilityException"], [4, 1, 1, "", "NoIntruderPickableException"], [4, 1, 1, "", "NoVocabularyException"], [4, 2, 1, "", "OnlyGraphModelBuilder"], [4, 2, 1, "", "SINr"], [4, 2, 1, "", "SINrVectors"], [4, 2, 1, "", "ThresholdedModelBuilder"], [4, 5, 1, "", "get_compact_lgcc"], [4, 5, 1, "", "get_graph_from_matrix"], [4, 5, 1, "", "get_lgcc"]], "sinr.graph_embeddings.InterpretableDimension": [[4, 3, 1, "", "add_interpreter"], [4, 3, 1, "", "get_dict"], [4, 3, 1, "", "get_idx"], [4, 3, 1, "", "get_interpreter"], [4, 3, 1, "", "get_interpreters"], [4, 3, 1, "", "get_value"], [4, 3, 1, "", "sort"], [4, 3, 1, "", "topk"], [4, 3, 1, "", "with_value"]], "sinr.graph_embeddings.InterpretableWordsModelBuilder": [[4, 3, 1, "", "build"]], "sinr.graph_embeddings.ModelBuilder": [[4, 3, 1, "", "build"], [4, 3, 1, "", "with_all"], [4, 3, 1, "", "with_communities"], [4, 3, 1, "", "with_embeddings_nfm"], [4, 3, 1, "", "with_embeddings_nr"], [4, 3, 1, "", "with_graph"], [4, 3, 1, "", "with_np"], [4, 3, 1, "", "with_vocabulary"]], "sinr.graph_embeddings.OnlyGraphModelBuilder": [[4, 3, 1, "", "build"]], "sinr.graph_embeddings.SINr": [[4, 3, 1, "", "detect_communities"], [4, 3, 1, "", "extract_embeddings"], [4, 3, 1, "", "get_communities"], [4, 3, 1, "", "get_cooc_graph"], [4, 3, 1, "", "get_nfm"], [4, 3, 1, "", "get_np"], [4, 3, 1, "", "get_nr"], [4, 3, 1, "", "get_out_of_LgCC_coms"], [4, 3, 1, "", "get_vocabulary"], [4, 3, 1, "", "get_wrd_to_id"], [4, 3, 1, "", "load_from_adjacency_matrix"], [4, 3, 1, "", "load_from_cooc_pkl"], [4, 3, 1, "", "load_from_graph"], [4, 3, 1, "", "run"], [4, 3, 1, "", "size_of_voc"], [4, 3, 1, "", "transfert_communities_labels"]], "sinr.graph_embeddings.SINrVectors": [[4, 3, 1, "", "binarize"], [4, 3, 1, "", "cosine_dist"], [4, 3, 1, "", "cosine_sim"], [4, 3, 1, "", "dim_nnz_count"], [4, 3, 1, "", "dim_nnz_thresholds"], [4, 3, 1, "", "get_communities_as_labels_sets"], [4, 3, 1, "", "get_community_membership"], [4, 3, 1, "", "get_community_sets"], [4, 3, 1, "", "get_dimension_descriptors"], [4, 3, 1, "", "get_dimension_descriptors_idx"], [4, 3, 1, "", "get_dimension_stereotypes"], [4, 3, 1, "", "get_dimension_stereotypes_idx"], [4, 3, 1, "", "get_matching_communities"], [4, 3, 1, "", "get_my_vector"], [4, 3, 1, "", "get_nnv"], [4, 3, 1, "", "get_nnz"], [4, 3, 1, "", "get_number_of_dimensions"], [4, 3, 1, "", "get_nz_dims"], [4, 3, 1, "", "get_obj_descriptors"], [4, 3, 1, "", "get_obj_stereotypes"], [4, 3, 1, "", "get_obj_stereotypes_and_descriptors"], [4, 3, 1, "", "get_topk_dims"], [4, 3, 1, "", "get_union_topk"], [4, 3, 1, "", "get_value_dim_per_word"], [4, 3, 1, "", "get_value_obj_dim"], [4, 3, 1, "", "get_vectors_using_self_space"], [4, 3, 1, "", "get_vocabulary_size"], [4, 3, 1, "", "inter_sim"], [4, 3, 1, "", "intra_sim"], [4, 4, 1, "", "labels"], [4, 3, 1, "", "light_model_save"], [4, 3, 1, "", "load"], [4, 3, 1, "", "load_from_w2v"], [4, 3, 1, "", "most_similar"], [4, 3, 1, "", "obj_nnz_count"], [4, 3, 1, "", "pct_nnz"], [4, 3, 1, "", "pick_intruder"], [4, 3, 1, "", "remove_communities_dim_nnz"], [4, 3, 1, "", "save"], [4, 3, 1, "", "set_communities"], [4, 3, 1, "", "set_graph"], [4, 3, 1, "", "set_n_jobs"], [4, 3, 1, "", "set_np"], [4, 3, 1, "", "set_vectors"], [4, 3, 1, "", "set_vocabulary"], [4, 3, 1, "", "sparsify"]], "sinr.graph_embeddings.ThresholdedModelBuilder": [[4, 3, 1, "", "build"]], "sinr.nfm": [[4, 5, 1, "", "compute_NP"], [4, 5, 1, "", "compute_NR"], [4, 5, 1, "", "distributed_degree"], [4, 5, 1, "", "get_community_weights"], [4, 5, 1, "", "get_membership"], [4, 5, 1, "", "get_nfm_embeddings"]], "sinr.strategy_loader": [[4, 5, 1, "", "load_adj_mat"], [4, 5, 1, "", "load_pkl_text"]], "sinr.text": [[6, 0, 0, "-", "cooccurrence"], [6, 0, 0, "-", "cooccurrence_cython"], [6, 0, 0, "-", "evaluate"], [6, 0, 0, "-", "pmi"], [6, 0, 0, "-", "preprocess"]], "sinr.text.cooccurrence": [[6, 2, 1, "", "Cooccurrence"]], "sinr.text.cooccurrence.Cooccurrence": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "load"], [6, 3, 1, "", "save"]], "sinr.text.cooccurrence_cython": [[6, 5, 1, "", "construct_cooccurrence_matrix"]], "sinr.text.evaluate": [[6, 5, 1, "", "best_predicted_word"], [6, 5, 1, "", "best_predicted_word_k"], [6, 5, 1, "", "calc_direct_bias_sinr"], [6, 5, 1, "", "calc_indirect_bias_sinr"], [6, 5, 1, "", "calcul_analogy_normalized"], [6, 5, 1, "", "calcul_analogy_sparsified_normalized"], [6, 5, 1, "", "calcul_analogy_value_zero"], [6, 5, 1, "", "clf_fit"], [6, 5, 1, "", "clf_score"], [6, 5, 1, "", "clf_xgb_interpretability"], [6, 5, 1, "", "dist_ratio"], [6, 5, 1, "", "dist_ratio_dim"], [6, 5, 1, "", "eval_analogy"], [6, 5, 1, "", "eval_analogy_by_category_k"], [6, 5, 1, "", "eval_analogy_k"], [6, 5, 1, "", "eval_similarity"], [6, 5, 1, "", "fetch_SimLex"], [6, 5, 1, "", "fetch_analogy"], [6, 5, 1, "", "fetch_data_MEN"], [6, 5, 1, "", "fetch_data_SCWS"], [6, 5, 1, "", "fetch_data_WS353"], [6, 5, 1, "", "find_txt_files"], [6, 5, 1, "", "format_lines"], [6, 5, 1, "", "identify_gender_direction_sinr"], [6, 5, 1, "", "load_config"], [6, 5, 1, "", "normalize_vector"], [6, 5, 1, "", "plot_category_error_rates"], [6, 5, 1, "", "plot_global_error_rates"], [6, 5, 1, "", "project_vector"], [6, 5, 1, "", "reject_vector"], [6, 5, 1, "", "remove_invalid_lines"], [6, 5, 1, "", "similarity_MEN_WS353_SCWS"], [6, 5, 1, "", "vectorizer"]], "sinr.text.pmi": [[6, 5, 1, "", "pmi"], [6, 5, 1, "", "pmi_filter"]], "sinr.text.preprocess": [[6, 2, 1, "", "Corpus"], [6, 2, 1, "", "VRTMaker"], [6, 5, 1, "", "extract_text"], [6, 5, 1, "", "open_corpus"]], "sinr.text.preprocess.Corpus": [[6, 4, 1, "", "LANGUAGE_EN"], [6, 4, 1, "", "LANGUAGE_FR"], [6, 4, 1, "", "REGISTER_NEWS"], [6, 4, 1, "", "REGISTER_WEB"]], "sinr.text.preprocess.VRTMaker": [[6, 3, 1, "", "do_txt_to_vrt"]], "sinr.viz": [[4, 2, 1, "", "SINrViz"]], "sinr.viz.SINrViz": [[4, 3, 1, "", "compare_stereotypes"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "sinr": [0, 1, 4, 5, 6], "": 0, "document": 0, "content": [0, 4, 5, 6], "indic": 0, "tabl": 0, "embed": [1, 4], "overview": 2, "requir": 2, "instal": 2, "usag": 2, "exampl": 2, "contribut": 2, "licens": 2, "public": [2, 3], "core": 4, "graph": 4, "attribut": 4, "nfm": [4, 5], "loader": 4, "visual": 4, "logger": 4, "modul": [4, 5, 6], "test": 5, "workflow": 5, "text": 6, "co": 6, "occurr": 6, "cython": 6, "pmi": 6, "filter": 6, "preprocess": 6, "evalu": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to SINr\u2019s documentation!": [[0, "welcome-to-sinr-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "SINr Embeddings": [[1, "sinr-embeddings"]], "Overview": [[2, "overview"]], "Requirements": [[2, "requirements"]], "Install": [[2, "install"]], "Usage example": [[2, "usage-example"]], "Contributing": [[2, "contributing"]], "License": [[2, "license"]], "Publications": [[2, "publications"], [3, "publications"]], "SINr Core": [[4, "sinr-core"]], "Graph Embeddings": [[4, "module-sinr.graph_embeddings"]], "Attributes": [[4, "attributes"], [4, "id1"]], "SINr NFM": [[4, "module-sinr.nfm"]], "Loader": [[4, "module-sinr.strategy_loader"]], "Visualization": [[4, "module-sinr.viz"]], "Logger": [[4, "module-sinr.logger"]], "Module contents": [[4, "module-sinr"], [5, "module-contents"], [6, "module-sinr.text"]], "Test SINr": [[5, "test-sinr"]], "Test SINr NFM": [[5, "test-sinr-nfm"]], "Test SINr workflow": [[5, "test-sinr-workflow"]], "SINr Text": [[6, "sinr-text"]], "Co-occurrence": [[6, "module-sinr.text.cooccurrence"]], "Co-occurrence Cython": [[6, "module-sinr.text.cooccurrence_cython"]], "PMI Filtering": [[6, "module-sinr.text.pmi"]], "Preprocess Text": [[6, "module-sinr.text.preprocess"]], "Evaluate": [[6, "module-sinr.text.evaluate"]]}, "indexentries": {"dimensionfilteredexception": [[4, "sinr.graph_embeddings.DimensionFilteredException"]], "interpretabledimension (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.InterpretableDimension"]], "interpretablewordsmodelbuilder (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.InterpretableWordsModelBuilder"]], "modelbuilder (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.ModelBuilder"]], "nocommunitydetectedexception": [[4, "sinr.graph_embeddings.NoCommunityDetectedException"]], "noembeddingextractedexception": [[4, "sinr.graph_embeddings.NoEmbeddingExtractedException"]], "nointerpretabilityexception": [[4, "sinr.graph_embeddings.NoInterpretabilityException"]], "nointruderpickableexception": [[4, "sinr.graph_embeddings.NoIntruderPickableException"]], "novocabularyexception": [[4, "sinr.graph_embeddings.NoVocabularyException"]], "onlygraphmodelbuilder (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.OnlyGraphModelBuilder"]], "sinr (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.SINr"]], "sinrvectors (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.SINrVectors"]], "sinrviz (class in sinr.viz)": [[4, "sinr.viz.SINrViz"]], "thresholdedmodelbuilder (class in sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.ThresholdedModelBuilder"]], "add_interpreter() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.add_interpreter"]], "binarize() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.binarize"]], "build() (sinr.graph_embeddings.interpretablewordsmodelbuilder method)": [[4, "sinr.graph_embeddings.InterpretableWordsModelBuilder.build"]], "build() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.build"]], "build() (sinr.graph_embeddings.onlygraphmodelbuilder method)": [[4, "sinr.graph_embeddings.OnlyGraphModelBuilder.build"]], "build() (sinr.graph_embeddings.thresholdedmodelbuilder method)": [[4, "sinr.graph_embeddings.ThresholdedModelBuilder.build"]], "compare_stereotypes() (sinr.viz.sinrviz method)": [[4, "sinr.viz.SINrViz.compare_stereotypes"]], "compute_np() (in module sinr.nfm)": [[4, "sinr.nfm.compute_NP"]], "compute_nr() (in module sinr.nfm)": [[4, "sinr.nfm.compute_NR"]], "cosine_dist() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.cosine_dist"]], "cosine_sim() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.cosine_sim"]], "detect_communities() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.detect_communities"]], "dim_nnz_count() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.dim_nnz_count"]], "dim_nnz_thresholds() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.dim_nnz_thresholds"]], "distributed_degree() (in module sinr.nfm)": [[4, "sinr.nfm.distributed_degree"]], "extract_embeddings() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.extract_embeddings"]], "get_communities() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_communities"]], "get_communities_as_labels_sets() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_communities_as_labels_sets"]], "get_community_membership() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_community_membership"]], "get_community_sets() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_community_sets"]], "get_community_weights() (in module sinr.nfm)": [[4, "sinr.nfm.get_community_weights"]], "get_compact_lgcc() (in module sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.get_compact_lgcc"]], "get_cooc_graph() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_cooc_graph"]], "get_dict() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.get_dict"]], "get_dimension_descriptors() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_dimension_descriptors"]], "get_dimension_descriptors_idx() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_dimension_descriptors_idx"]], "get_dimension_stereotypes() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_dimension_stereotypes"]], "get_dimension_stereotypes_idx() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_dimension_stereotypes_idx"]], "get_graph_from_matrix() (in module sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.get_graph_from_matrix"]], "get_idx() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.get_idx"]], "get_interpreter() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.get_interpreter"]], "get_interpreters() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.get_interpreters"]], "get_lgcc() (in module sinr.graph_embeddings)": [[4, "sinr.graph_embeddings.get_lgcc"]], "get_matching_communities() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_matching_communities"]], "get_membership() (in module sinr.nfm)": [[4, "sinr.nfm.get_membership"]], "get_my_vector() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_my_vector"]], "get_nfm() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_nfm"]], "get_nfm_embeddings() (in module sinr.nfm)": [[4, "sinr.nfm.get_nfm_embeddings"]], "get_nnv() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_nnv"]], "get_nnz() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_nnz"]], "get_np() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_np"]], "get_nr() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_nr"]], "get_number_of_dimensions() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_number_of_dimensions"]], "get_nz_dims() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_nz_dims"]], "get_obj_descriptors() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_obj_descriptors"]], "get_obj_stereotypes() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_obj_stereotypes"]], "get_obj_stereotypes_and_descriptors() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_obj_stereotypes_and_descriptors"]], "get_out_of_lgcc_coms() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_out_of_LgCC_coms"]], "get_topk_dims() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_topk_dims"]], "get_union_topk() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_union_topk"]], "get_value() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.get_value"]], "get_value_dim_per_word() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_value_dim_per_word"]], "get_value_obj_dim() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_value_obj_dim"]], "get_vectors_using_self_space() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_vectors_using_self_space"]], "get_vocabulary() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_vocabulary"]], "get_vocabulary_size() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.get_vocabulary_size"]], "get_wrd_to_id() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.get_wrd_to_id"]], "inter_sim() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.inter_sim"]], "intra_sim() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.intra_sim"]], "labels (sinr.graph_embeddings.sinrvectors attribute)": [[4, "sinr.graph_embeddings.SINrVectors.labels"]], "light_model_save() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.light_model_save"]], "load() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.load"]], "load_adj_mat() (in module sinr.strategy_loader)": [[4, "sinr.strategy_loader.load_adj_mat"]], "load_from_adjacency_matrix() (sinr.graph_embeddings.sinr class method)": [[4, "sinr.graph_embeddings.SINr.load_from_adjacency_matrix"]], "load_from_cooc_pkl() (sinr.graph_embeddings.sinr class method)": [[4, "sinr.graph_embeddings.SINr.load_from_cooc_pkl"]], "load_from_graph() (sinr.graph_embeddings.sinr class method)": [[4, "sinr.graph_embeddings.SINr.load_from_graph"]], "load_from_w2v() (sinr.graph_embeddings.sinrvectors class method)": [[4, "sinr.graph_embeddings.SINrVectors.load_from_w2v"]], "load_pkl_text() (in module sinr.strategy_loader)": [[4, "sinr.strategy_loader.load_pkl_text"]], "module": [[4, "module-sinr"], [4, "module-sinr.graph_embeddings"], [4, "module-sinr.logger"], [4, "module-sinr.nfm"], [4, "module-sinr.strategy_loader"], [4, "module-sinr.viz"], [6, "module-sinr.text"], [6, "module-sinr.text.cooccurrence"], [6, "module-sinr.text.cooccurrence_cython"], [6, "module-sinr.text.evaluate"], [6, "module-sinr.text.pmi"], [6, "module-sinr.text.preprocess"]], "most_similar() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.most_similar"]], "obj_nnz_count() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.obj_nnz_count"]], "pct_nnz() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.pct_nnz"]], "pick_intruder() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.pick_intruder"]], "remove_communities_dim_nnz() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.remove_communities_dim_nnz"]], "run() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.run"]], "save() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.save"]], "set_communities() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.set_communities"]], "set_graph() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.set_graph"]], "set_n_jobs() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.set_n_jobs"]], "set_np() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.set_np"]], "set_vectors() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.set_vectors"]], "set_vocabulary() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.set_vocabulary"]], "sinr": [[4, "module-sinr"]], "sinr.graph_embeddings": [[4, "module-sinr.graph_embeddings"]], "sinr.logger": [[4, "module-sinr.logger"]], "sinr.nfm": [[4, "module-sinr.nfm"]], "sinr.strategy_loader": [[4, "module-sinr.strategy_loader"]], "sinr.viz": [[4, "module-sinr.viz"]], "size_of_voc() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.size_of_voc"]], "sort() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.sort"]], "sparsify() (sinr.graph_embeddings.sinrvectors method)": [[4, "sinr.graph_embeddings.SINrVectors.sparsify"]], "topk() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.topk"]], "transfert_communities_labels() (sinr.graph_embeddings.sinr method)": [[4, "sinr.graph_embeddings.SINr.transfert_communities_labels"]], "with_all() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_all"]], "with_communities() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_communities"]], "with_embeddings_nfm() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_embeddings_nfm"]], "with_embeddings_nr() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_embeddings_nr"]], "with_graph() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_graph"]], "with_np() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_np"]], "with_value() (sinr.graph_embeddings.interpretabledimension method)": [[4, "sinr.graph_embeddings.InterpretableDimension.with_value"]], "with_vocabulary() (sinr.graph_embeddings.modelbuilder method)": [[4, "sinr.graph_embeddings.ModelBuilder.with_vocabulary"]], "cooccurrence (class in sinr.text.cooccurrence)": [[6, "sinr.text.cooccurrence.Cooccurrence"]], "corpus (class in sinr.text.preprocess)": [[6, "sinr.text.preprocess.Corpus"]], "language_en (sinr.text.preprocess.corpus attribute)": [[6, "sinr.text.preprocess.Corpus.LANGUAGE_EN"]], "language_fr (sinr.text.preprocess.corpus attribute)": [[6, "sinr.text.preprocess.Corpus.LANGUAGE_FR"]], "register_news (sinr.text.preprocess.corpus attribute)": [[6, "sinr.text.preprocess.Corpus.REGISTER_NEWS"]], "register_web (sinr.text.preprocess.corpus attribute)": [[6, "sinr.text.preprocess.Corpus.REGISTER_WEB"]], "vrtmaker (class in sinr.text.preprocess)": [[6, "sinr.text.preprocess.VRTMaker"]], "best_predicted_word() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.best_predicted_word"]], "best_predicted_word_k() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.best_predicted_word_k"]], "calc_direct_bias_sinr() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.calc_direct_bias_sinr"]], "calc_indirect_bias_sinr() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.calc_indirect_bias_sinr"]], "calcul_analogy_normalized() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.calcul_analogy_normalized"]], "calcul_analogy_sparsified_normalized() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.calcul_analogy_sparsified_normalized"]], "calcul_analogy_value_zero() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.calcul_analogy_value_zero"]], "clf_fit() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.clf_fit"]], "clf_score() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.clf_score"]], "clf_xgb_interpretability() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.clf_xgb_interpretability"]], "construct_cooccurrence_matrix() (in module sinr.text.cooccurrence_cython)": [[6, "sinr.text.cooccurrence_cython.construct_cooccurrence_matrix"]], "dist_ratio() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.dist_ratio"]], "dist_ratio_dim() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.dist_ratio_dim"]], "do_txt_to_vrt() (sinr.text.preprocess.vrtmaker method)": [[6, "sinr.text.preprocess.VRTMaker.do_txt_to_vrt"]], "eval_analogy() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.eval_analogy"]], "eval_analogy_by_category_k() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.eval_analogy_by_category_k"]], "eval_analogy_k() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.eval_analogy_k"]], "eval_similarity() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.eval_similarity"]], "extract_text() (in module sinr.text.preprocess)": [[6, "sinr.text.preprocess.extract_text"]], "fetch_simlex() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.fetch_SimLex"]], "fetch_analogy() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.fetch_analogy"]], "fetch_data_men() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.fetch_data_MEN"]], "fetch_data_scws() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.fetch_data_SCWS"]], "fetch_data_ws353() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.fetch_data_WS353"]], "find_txt_files() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.find_txt_files"]], "fit() (sinr.text.cooccurrence.cooccurrence method)": [[6, "sinr.text.cooccurrence.Cooccurrence.fit"]], "format_lines() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.format_lines"]], "identify_gender_direction_sinr() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.identify_gender_direction_sinr"]], "load() (sinr.text.cooccurrence.cooccurrence class method)": [[6, "sinr.text.cooccurrence.Cooccurrence.load"]], "load_config() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.load_config"]], "normalize_vector() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.normalize_vector"]], "open_corpus() (in module sinr.text.preprocess)": [[6, "sinr.text.preprocess.open_corpus"]], "plot_category_error_rates() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.plot_category_error_rates"]], "plot_global_error_rates() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.plot_global_error_rates"]], "pmi() (in module sinr.text.pmi)": [[6, "sinr.text.pmi.pmi"]], "pmi_filter() (in module sinr.text.pmi)": [[6, "sinr.text.pmi.pmi_filter"]], "project_vector() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.project_vector"]], "reject_vector() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.reject_vector"]], "remove_invalid_lines() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.remove_invalid_lines"]], "save() (sinr.text.cooccurrence.cooccurrence method)": [[6, "sinr.text.cooccurrence.Cooccurrence.save"]], "similarity_men_ws353_scws() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.similarity_MEN_WS353_SCWS"]], "sinr.text": [[6, "module-sinr.text"]], "sinr.text.cooccurrence": [[6, "module-sinr.text.cooccurrence"]], "sinr.text.cooccurrence_cython": [[6, "module-sinr.text.cooccurrence_cython"]], "sinr.text.evaluate": [[6, "module-sinr.text.evaluate"]], "sinr.text.pmi": [[6, "module-sinr.text.pmi"]], "sinr.text.preprocess": [[6, "module-sinr.text.preprocess"]], "vectorizer() (in module sinr.text.evaluate)": [[6, "sinr.text.evaluate.vectorizer"]]}})